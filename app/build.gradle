apply plugin: 'com.android.application'

def cfg = rootProject.ext.configuration // 配置
def libs = rootProject.ext.libraries // 库

android {
    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion
    defaultConfig {
        applicationId cfg.package
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    //签名配置
    signingConfigs {
        release {
            keyAlias 'ysx_test_alias'
            keyPassword '123456'
            storeFile file('ysx_test.jks')
            storePassword '1qaz2wsx'
        }
        debug{
            storeFile file("debug.keystore")
        }
    }

    buildTypes {

        debug {
            // debug版本不混淆
            minifyEnabled false
        }

        release {
            //todo release版本混淆
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            debuggable false
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    androidTestCompile("com.android.support.test.espresso:espresso-core:${libs.espressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:${libs.junitVersion}"

    compile "com.android.support:support-v4:${libs.supportVersion}"

    compile "com.github.bumptech.glide:glide:${libs.glide}"
    compile "com.squareup.picasso:picasso:${libs.picasso}"
    compile "com.android.volley:volley:${libs.volley}"
    compile "com.nostra13.universalimageloader:universal-image-loader:${libs.universalimageloader}"
}
